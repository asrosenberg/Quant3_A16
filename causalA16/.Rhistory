{
set.seed(seed)
n <- 6609
b0 <- 1
b1 <- 3
b2 <- -0.5
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
#summary(dat$lpop)
#sd(dat$lpop, na.rm = TRUE)
#sd(dat$gdpen, na.rm = TRUE)
test_data <- make_fearon_obs_study()
table(test_data$d)
make_fearon_obs_study <- function(seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
n <- 6609
b0 <- 1
b1 <- 0.25
b2 <- -0.5
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
#summary(dat$lpop)
#sd(dat$lpop, na.rm = TRUE)
#sd(dat$gdpen, na.rm = TRUE)
test_data <- make_fearon_obs_study()
table(test_data$d)
make_fearon_obs_study <- function(seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
n <- 6609
b0 <- 1
b1 <- -0.25
b2 <- -0.5
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
#summary(dat$lpop)
#sd(dat$lpop, na.rm = TRUE)
#sd(dat$gdpen, na.rm = TRUE)
test_data <- make_fearon_obs_study()
table(test_data$d)
test_data <- make_fearon_obs_study()
table(test_data$d)
test_data <- make_fearon_obs_study()
table(test_data$d)
test_data <- make_fearon_obs_study()
table(test_data$d)
test_data <- make_fearon_obs_study()
table(test_data$d)
test_data
DATA <- make_fearon_obs_study()
propens_score <- glm(y ~ x1 + x2, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(y ~ x1 + x2, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
replicates <- replicate(100, generate_matching_estimates(x1 = x1, x2 = x2))
replicates <- replicate(100, generate_matching_estimates())
warnings()
hist(replicates)
prop_model <- glm(onset ~ lpop + gdpen, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
abline(v = naive_match$est, color = "red")
abline(v = naive_match$est, col = "red")
hist(replicates)
abline(v = naive_match$est, col = "red")
hist(replicates)
abline(v = naive_match$est, col = "red")
hist(replicates, xlim = c(-1, 1))
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
naive_match$est
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1 + x2, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
prop_model <- glm(onset ~ lpop, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
replicates <- replicate(1000, generate_matching_estimates())
names <- c("Kevin", "Miguel", "Ethan", "Ryan", "Liwu", "Andrew", "Daniel",
"Jianzi", "Ricardo", "Mariana")
sample(1, names)
sample(names, 1)
sample(names, 1)
sample(names, 1)
sample(names, 1)
sample(names, 1)
hist(replicates, xlim = c(-1, 0))
prop_model <- glm(onset ~ lpop, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
abline(v = naive_match$est, col = "red")
prob_y0 <- prop_0s
(runif(n) < prob_y0),
runif(n) < prob_y0
(runif(n) < prob_y0)
1 * (runif(n) < prob_y0)
(runif(n) < prob_y1)
prob_y1 <- prop_1s
(runif(n) < prob_y1)
1 * (runif(n) < prob_y1)
1 * (runif(n) < prob_y0)
1 * (runif(n) < prob_y1)
test_fearon_data <- make_fake_fearon_data()
View(test_fearon_data)
prop_1s
mean(test_fearon_data$y1 - test_fearon_data$y0)
true_diff_means <- mean(test_fearon_data$y1 - test_fearon_data$y0)
test_data <- make_fearon_obs_study()
table(test_data$y)
prob_y1 <- .98
rbinom(n, 6000, prob = prob_y_1)
prob_y_1 <- .98
rbinom(n, 6000, prob = prob_y_1)
rbinom(6000, prob = prob_y_1)
?rbindom
?rbinom
rbinom(6000, 2 prob = prob_y_1)
rbinom(6000, 2, prob = prob_y_1)
rbinom(6000, 1, prob = prob_y_1)
prob_y_1 <- .02
rbinom(6000, 1, prob = prob_y_1)
b0 <- 1
b1 <- -0.25
b2 <- -0.5
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
b0 <- 1
b1 <- -0.25
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
b0 <- 0.5
b1 <- -0.25
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
b0 <- 0.5
b1 <- -0.2
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
b0 <- 0.5
b1 <- -0.3
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
table(DATA$y)
table(DATA$d)
table(dat$Oil)
make_fearon_obs_study <- function(seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
n <- 6609
b0 <- 0.5
b1 <- -0.3
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
test_data <- make_fearon_obs_study()
table(test_data$y)
table(dat$onset)
make_fearon_obs_study <- function(seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
n <- 6609
b0 <- 5
b1 <- -0.3
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
prob_y_1 <- .02
test_data <- make_fearon_obs_study()
table(test_data$y)
table(dat$onset)
make_fearon_obs_study <- function(seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
n <- 6609
b0 <- 5
b1 <- 3
b2 <- -0.8
x1 <- rnorm(n, mean = 9.602, sd = 1.45)
x2 <- exp(rnorm(n, mean = .75, sd = 1))
DATA <- make_fake_fearon_data()
DATA[, prob_d_equals_1 := plogis(b0 + b1 * x1 + b2 * x2)]
mean(DATA$prob_d_equals_1)
DATA[, d := 1 * (runif(n) < prob_d_equals_1)]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL, prob_d_equals_1 = NULL)]
DATA[, ':=' (x1 = x1, x2 = x2)]
attr(DATA, "seed") <- seed
DATA
}
#prob_y_1 <- .02
test_data <- make_fearon_obs_study()
table(test_data$y)
table(dat$onset)
test_data <- make_fearon_obs_study(seed = 666)
table(test_data$y)
table(dat$onset)
test_data <- make_fearon_obs_study(seed = 66)
table(test_data$y)
table(dat$onset)
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
replicates <- replicate(1000, generate_matching_estimates())
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1 + x2, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
prop_model <- glm(Oil ~ lpop, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
generate_matching_estimates <- function()
{
DATA <- make_fearon_obs_study()
propens_score <- glm(d ~ x1, data = DATA, family = binomial)
ps <- predict(propens_score, type = "response")
match_est <- Match(Y = DATA$y, Tr = DATA$d, X = ps)
match_est$est
}
generate_matching_estimates()
replicates <- replicate(1000, generate_matching_estimates())
replicates <- replicate(10, generate_matching_estimates())
hist(replicates, xlim = c(-1, 0))
replicates <- replicate(100, generate_matching_estimates())
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
prop_model <- glm(Oil ~ lpop, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
abline(v = naive_match$est, col = "red")
naive_match$est
test_fearon_data <- make_fake_fearon_data()
true_diff_means <- mean(test_fearon_data$y1 - test_fearon_data$y0)
true_diff_means
DATA$d
table(DATA$d)
table(dat$Oil)
prop_model <- glm(Oil ~ lpop + gdpen, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
names <- c("Kevin", "Miguel", "Ethan", "Ryan", "Liwu", "Daniel",
"Jianzi", "Ricardo", "Mariana")
sample(names, 1)
names <- c("Kevin", "Miguel", "Ethan", "Ryan", "Liwu", "Daniel",
"Jianzi", "Ricardo")
sample(names, 1)
choose(100, 50)
choose(30, 10)
choose(200, 5)
names <- c("Kevin", "Miguel", "Ethan", "Ryan", "Liwu", "Daniel", "Ricardo")
sample(names, 1)
choose(20, 5)
y <- b0 + b1 * rnorm(n) + b2 * rnorm(n) + rnorm(n, 0, 1)
n <- 100
b0 <- 2
b1 <- -0.5
b2 <- 7
y <- b0 + b1 * rnorm(n) + b2 * rnorm(n) + rnorm(n, 0, 1)
n <- 100
b0 <- 2
b1 <- -0.5
b2 <- 7
x1 <- rnorm(n)
x2 <- rnorm(n)
y <- b0 + b1 * x1 + b2 * x2 + rnorm(n, 0, 1)
lm(y ~ x1 ~ x2)
lm(y ~ x1 + x2)
test_ols <- function()
{
x1 <- rnorm(n)
x2 <- rnorm(n)
y <- b0 + b1 * x1 + b2 * x2 + rnorm(n, 0, 1)
coef(lm(y ~ x1 + x2))
}
test_ols()
test_ols()
test_ols()
simulations <- replicate(100, test_ols())
simulations
simulations <- t(replicate(100, test_ols()))
simulations
simulations[, 1]
hist(simulations[, 1])
abline(v = b0, col = "red")
hist(simulations[, 1], breaks = 100)
abline(v = b0, col = "red")
simulations <- t(replicate(1000, test_ols()))
hist(simulations[, 1], breaks = 100)
abline(v = b0, col = "red")
n <- 10
b0 <- 2
b1 <- -0.5
b2 <- 7
test_ols <- function()
{
x1 <- rnorm(n)
x2 <- rnorm(n)
y <- b0 + b1 * x1 + b2 * x2 + rnorm(n, 0, 1)
coef(lm(y ~ x1 + x2))
}
test_ols()
simulations <- t(replicate(1000, test_ols()))
hist(simulations[, 1], breaks = 100)
abline(v = b0, col = "red")
n <- 10000
b0 <- 2
b1 <- -0.5
b2 <- 7
test_ols <- function()
{
x1 <- rnorm(n)
x2 <- rnorm(n)
y <- b0 + b1 * x1 + b2 * x2 + rnorm(n, 0, 1)
coef(lm(y ~ x1 + x2))
}
test_ols()
simulations <- t(replicate(1000, test_ols()))
hist(simulations[, 1], breaks = 100)
abline(v = b0, col = "red")
sum(dat$onset)/nrow(dat)
1 - prop_1s
make_fake_fearon_data()
summary(dat$lpop)
hist(dat$lpop)
rnorm(n, mean = 9.602, sd = 1.45)
hist(rnorm(n, mean = 9.602, sd = 1.45))
hist(dat$gdpen)
hist(rnorm(n, mean = .75, sd = 1))
hist(exp(rnorm(n, mean = .75, sd = 1)))
hist(log(dat$gdpen))
hist(rnorm(n, mean = .75, sd = 1))
hist(exp(log(dat$gdpen)))
hist(exp(rnorm(n, mean = .75, sd = 1)))
cov(dat$lpop, dat$gdpen)
cov(dat$lpop, dat$gdpen, na.rm = TRUE)
cov(dat$lpop, dat$gdpen, use = "complete.obs")
test_data <- make_fearon_obs_study(seed = 66)
table(test_data$y)
table(dat$onset)
generate_matching_estimates()
prop_model <- glm(Oil ~ lpop + gdpen, data = dat_subset, family = binomial)
propscore <- predict(prop_model, type = "response")
naive_match <- Match(dat_subset$onset, Tr = dat_subset$Oil, X = propscore)
naive_match$est
hist(replicates, xlim = c(-1, 0))
abline(v = naive_match$est, col = "red")
hist(replicates)
abline(v = naive_match$est, col = "red")
?texreg
library(texreg)
?texreg
library(causalA16)
library(data.table)
library(ggplot2)
library(texreg)
dat <- load_dataset("fearon_laitin_03")
setDT(dat)
setkey(dat, onset)
ggplot(dat, aes(onset)) + geom_histogram() + theme_bw()
#range(dat$onset)
#table(dat$onset)
dat <- dat[onset < 4]
mod1 <- glm(onset ~ warl + gdpenl + lpopl1 + lmtnest + ncontig + Oil + nwstate +
instab + polity2l + ethfrac + relfrac, family = binomial(link = "logit"),
data = dat)
tab1 <- texreg(mod1, digits = 3,
caption = "Replication of Model 1 of Fearon and Laitin (2003).",
include.deviance = FALSE, include.bic = FALSE, dcolumn = TRUE)
oil_coef <- signif(mod1$coef[7], digits = 3)
tab1
str(tab1)
library(stargazer)
?stargazer
?texreg
grep(tab1, "\usepackage")
grep(tab1, "\\usepackage")
grep(tab1, "usepackage")
?grep
grep("usepackage", tab1)
gsub("usepackage", tab1)
gsub(tab1, "\usepackage{dcolumn}", )
gsub(tab1, "\usepackage{dcolumn}", ^$)
gsub(tab1, "/\//usepackage{dcolumn}", ^$)
gsub(tab1, "\\\usepackage{dcolumn}", ^$)
gsub(tab1, "//\usepackage{dcolumn}", ^$)
gsub(tab1, "/\usepackage{dcolumn}", ^$)
gsub(tab1, "//\/usepackage{dcolumn}", ^$)
gsub(tab1, "//\//usepackage{dcolumn}", ^$)
gsub(tab1, "\\\usepackage{dcolumn}", ^$)
